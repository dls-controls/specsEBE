################################################################
#
# Specs EBE-4 template file.
#
# Macros:
#   P - Prefix for PV name
#   PORT - Bus/Port Address (eg. ASYN Port).
#   ADDR - Address on the bus (optional)
#   SCAN - SCAN rate for read parameters.
#
################################################################

# Macros:
# % macro, P, Device Prefix
# % macro, PORT, Asyn Port name
# % macro, SCAN, Poll rate

# This associates the template with an edm screen
# % gui, $(PORT), edm, ebe4.edl, P=$(P)

# /// Disable communication - Stop errors when device is not connected
record(bo, "$(P):DISABLE") {
  field(DESC, "Disable communication")
  field(PINI, "YES")
  field(VAL, "1")
  field(OMSL, "supervisory")
  field(ZNAM, "Enabled")
  field(ONAM, "Disabled")
}

################################################################
# Read Only records
################################################################

# /// Device name
record(stringin, "$(P):DEVICENAME") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(INP, "@ebe4.proto getDeviceName $(PORT) 0")
  field(PINI, "YES")
  field(SCAN, "10 second")
}

# /// Device uptime
record(ai, "$(P):UPTIME") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(INP, "@ebe4.proto getUptime $(PORT) 0")
  field(PINI, "YES")
  field(SCAN, "10 second")
}

# /// Water interlock
#% archiver 10 Monitor
#% alh
record(bi, "$(P):WATER") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(INP, "@ebe4.proto getInt(13) $(PORT) 0")
  field(ZNAM, "Tripped")
  field(ONAM, "Safe")
  field(ZSV, "MAJOR")
  field(SCAN, "$(SCAN) second")
}

# /// IL2 interlock
#% archiver 10 Monitor
#% alh
record(bi, "$(P):IL2") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(INP, "@ebe4.proto getInt(14) $(PORT) 0")
  field(ZNAM, "Tripped")
  field(ONAM, "Safe")
  field(ZSV, "MAJOR")
  field(SCAN, "$(SCAN) second")
}

# /// Vacuum interlock
#% archiver 10 Monitor
#% alh
record(bi, "$(P):VACUUM") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(INP, "@ebe4.proto getInt(15) $(PORT) 0")
  field(ZNAM, "Tripped")
  field(ONAM, "Safe")
  field(ZSV, "MAJOR")
  field(SCAN, "$(SCAN) second")
}

# /// High voltage supply current
#% archiver 10 Monitor
record(ai, "$(P):IMON") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(INP, "@ebe4.proto getDouble(18) $(PORT) 0")
  field(SCAN, "$(SCAN) second")
  field(PREC, 2)
  field(EGU, "A")
}

################################################################
# Read/Write records
################################################################

# /// Set remote mode
record(bo, "$(P):MODE") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(DESC, "Remote mode set")
  field(OUT, "@ebe4.proto setRemoteMode($(P)) $(PORT) 0")
  field(ZNAM, "Local")
  field(ONAM, "Remote")
  field(VAL, "1")
}

# /// Clear error status
record(bo, "$(P):CLEAR_ERROR") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(DESC, "Clear error status")
  field(OUT, "@ebe4.proto setClearError($(P)) $(PORT) 0")
}

# /// High voltage
record(ao, "$(P):VOUT") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(DESC, "High voltage set")
  field(OUT, "@ebe4.proto setDouble(17,$(P)) $(PORT) 0")
}
#% archiver 10 Monitor
record(ai, "$(P):VMON") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(INP, "@ebe4.proto getDouble(19) $(PORT) 0")
  field(SCAN, "$(SCAN) second")
  field(PREC, 2)
  field(EGU, "V")
}

# /// Maximum voltage
#% autosave 1 VAL
record(ao, "$(P):VMAX") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(DESC, "High voltage limit set")
  field(OUT, "@ebe4.proto setDouble(21,$(P)) $(PORT) 0")
  field(PREC, 2)
}
record(ai, "$(P):VMAX_RBV") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(DESC, "High voltage limit get")
  field(INP, "@ebe4.proto getDouble(21) $(PORT) 0")
  field(SCAN, "$(SCAN) second")
  field(PREC, 2)
  field(EGU, "V")
  field(ADEL, "1")
}

# /// Enable/Disable high voltage supply
record(bo, "$(P):VSTATE") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(DESC, "High voltage enable/disable")
  field(OUT, "@ebe4.proto setInt(23,$(P)) $(PORT) 0")
  field(ZNAM, "Off")
  field(ONAM, "On")
}
#% archiver 10 Monitor
record(bi, "$(P):VSTATE_RBV") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(DESC, "High voltage enable/disable")
  field(INP, "@ebe4.proto getInt(23) $(PORT) 0")
  field(SCAN, "$(SCAN) second")
  field(ZNAM, "Off")
  field(ONAM, "On")
}

# /// Shutter position
record(mbbo, "$(P):SHUTTER") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(DESC, "Shutter position")
  field(OUT, "@ebe4.proto setInt(128,$(P)) $(PORT) 0")
  field(ZRVL, "0")
  field(ZRST, "1, 2 & 3 Open")
  field(ONVL, "1")
  field(ONST, "Pocket 2 Open")
  field(TWVL, "2")
  field(TWST, "All Closed")
  field(THVL, "3")
  field(THST, "1 & 4 Open")
  field(FRVL, "4")
  field(FRST, "1, 2 & 4 Open")
  field(FVVL, "5")
  field(FVST, "All Open")
}
#% archiver 10 Monitor
record(mbbi, "$(P):SHUTTER_RBV") {
  field(DTYP, "stream")
  field(SDIS, "$(P):DISABLE")
  field(DESC, "Shutter position")
  field(INP, "@ebe4.proto getInt(128) $(PORT) 0")
  field(SCAN, "$(SCAN) second")
  field(ZRVL, "0")
  field(ZRST, "1, 2 & 3 Open")
  field(ONVL, "1")
  field(ONST, "Pocket 2 Open")
  field(TWVL, "2")
  field(TWST, "All Closed")
  field(THVL, "3")
  field(THST, "1 & 4 Open")
  field(FRVL, "4")
  field(FRST, "1, 2 & 4 Open")
  field(FVVL, "5")
  field(FVST, "All Open")
}

#################################################################
# Generic protocol PV, to send any command
#################################################################

# /// Generic commands
# Do a caput on this, and do a subsequent caget to get the response. Max 39 chars.
record(stringin, "$(P):RESPONSE") {
  field(DESC, "Holds command response.")
}

# /// Generic command. This holds the command and stores it
record(stringout, "$(P):COMMAND") {
  field(DTYP, "stream")
  field(DESC, "Holds command string.")
  field(SDIS, "$(P):DISABLE")
  field(OUT, "@ebe4.proto gen($(P)) $(PORT) 0")
}
